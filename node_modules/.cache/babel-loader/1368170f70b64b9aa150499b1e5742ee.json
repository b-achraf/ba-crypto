{"ast":null,"code":"var _jsxFileName = \"/Users/achrafbilal/Desktop/resp-test/cryptocurrency/src/components/Cryptocurrencies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Column, Input, Col } from \"antd\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cryptocurrencies = ({\n  simplified\n}) => {\n  _s();\n\n  var _cryptosList$data;\n\n  const {\n    data: cryptosList,\n    isFetching\n  } = useGetCryptosQuery();\n  const [cryptos, setCryptos] = useState(cryptosList === null || cryptosList === void 0 ? void 0 : (_cryptosList$data = cryptosList.data) === null || _cryptosList$data === void 0 ? void 0 : _cryptosList$data.coins);\n  if (simplified) setCryptos(cryptos.slice());\n  console.log(cryptos);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutters: [32, 32],\n      className: \"crypto-card-container\",\n      children: cryptos.map(currency => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        lg: 6,\n        className: \"crypto-card\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/crypto/${currency.id}`,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: `${currency.rank}. ${currency.name}`,\n            extra: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"crypto-image\",\n              src: currency.iconUrl,\n              alt: currency.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 19\n            }, this),\n            hoverable: true,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Price : \", millify(currency.price)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Market Cap : \", millify(currency.marketCap)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Daily Change : \", millify(currency.change), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)\n      }, currency.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Cryptocurrencies, \"hVeP1R7qfBQ/5MFrwV0I+buoFtI=\", false, function () {\n  return [useGetCryptosQuery];\n});\n\n_c = Cryptocurrencies;\nexport default Cryptocurrencies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cryptocurrencies\");","map":{"version":3,"sources":["/Users/achrafbilal/Desktop/resp-test/cryptocurrency/src/components/Cryptocurrencies.jsx"],"names":["React","useState","millify","Link","Card","Row","Column","Input","Col","useGetCryptosQuery","Cryptocurrencies","simplified","data","cryptosList","isFetching","cryptos","setCryptos","coins","slice","console","log","map","currency","id","rank","name","iconUrl","price","marketCap","change"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,MAApB,EAA4BC,KAA5B,EAAmCC,GAAnC,QAA8C,MAA9C;AACA,SAASC,kBAAT,QAAmC,uBAAnC;;;;AACA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA;;AAAA;;AAC3C,QAAM;AAAEC,IAAAA,IAAI,EAAEC,WAAR;AAAqBC,IAAAA;AAArB,MAAoCL,kBAAkB,EAA5D;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAACY,WAAD,aAACA,WAAD,4CAACA,WAAW,CAAED,IAAd,sDAAC,kBAAmBK,KAApB,CAAtC;AACA,MAAIN,UAAJ,EACEK,UAAU,CAACD,OAAO,CAACG,KAAR,EAAD,CAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACF,sBACE;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,OAAO,EAAE,CAAC,EAAD,EAAK,EAAL,CAAd;AAAwB,MAAA,SAAS,EAAC,uBAAlC;AAAA,gBACGA,OAAO,CAACM,GAAR,CAAaC,QAAD,iBACX,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,EAAjB;AAAqB,QAAA,EAAE,EAAE,CAAzB;AAA4B,QAAA,SAAS,EAAC,aAAtC;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,WAAUA,QAAQ,CAACC,EAAG,EAAjC;AAAA,iCACE,QAAC,IAAD;AACE,YAAA,KAAK,EAAG,GAAED,QAAQ,CAACE,IAAK,KAAIF,QAAQ,CAACG,IAAK,EAD5C;AAEE,YAAA,KAAK,eACH;AACE,cAAA,SAAS,EAAC,cADZ;AAEE,cAAA,GAAG,EAAEH,QAAQ,CAACI,OAFhB;AAGE,cAAA,GAAG,EAAEJ,QAAQ,CAACG;AAHhB;AAAA;AAAA;AAAA;AAAA,oBAHJ;AASE,YAAA,SAAS,MATX;AAAA,oCAWE;AAAA,sCAAavB,OAAO,CAACoB,QAAQ,CAACK,KAAV,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF,eAYE;AAAA,2CAAkBzB,OAAO,CAACoB,QAAQ,CAACM,SAAV,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF,eAaE;AAAA,6CAAoB1B,OAAO,CAACoB,QAAQ,CAACO,MAAV,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,SAAyDP,QAAQ,CAACC,EAAlE;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2BD,CAjCD;;GAAMb,gB;UACsCD,kB;;;KADtCC,gB;AAmCN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Column, Input, Col } from \"antd\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nconst Cryptocurrencies = ({ simplified }) => {\n  const { data: cryptosList, isFetching } = useGetCryptosQuery();\n  const [cryptos, setCryptos] = useState(cryptosList?.data?.coins);\n  if (simplified)\n    setCryptos(cryptos.slice())\n    console.log(cryptos);\n  return (\n    <>\n      <Row gutters={[32, 32]} className=\"crypto-card-container\">\n        {cryptos.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n            <Link to={`/crypto/${currency.id}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={\n                  <img\n                    className=\"crypto-image\"\n                    src={currency.iconUrl}\n                    alt={currency.name}\n                  />\n                }\n                hoverable\n              >\n                <p> Price : {millify(currency.price)}</p>\n                <p> Market Cap : {millify(currency.marketCap)}</p>\n                <p> Daily Change : {millify(currency.change)}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n"]},"metadata":{},"sourceType":"module"}