{"ast":null,"code":"var _jsxFileName = \"/Users/achrafbilal/Desktop/resp-test/cryptocurrency/src/components/Cryptocurrencies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Column, Input, Col } from \"antd\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { Loader } from \"./index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cryptocurrencies = ({\n  simplified\n}) => {\n  _s();\n\n  var _cryptosList$data;\n\n  const count = simplified ? 10 : 100;\n  const {\n    data: cryptosList,\n    isFetching\n  } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState(cryptosList === null || cryptosList === void 0 ? void 0 : (_cryptosList$data = cryptosList.data) === null || _cryptosList$data === void 0 ? void 0 : _cryptosList$data.coins);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  if (isFetching) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 26\n  }, this);\n  useEffect(() => {\n    var _cryptosList$data2;\n\n    const filteredData = cryptosList === null || cryptosList === void 0 ? void 0 : (_cryptosList$data2 = cryptosList.data) === null || _cryptosList$data2 === void 0 ? void 0 : _cryptosList$data2.coins.filter(coin => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!simplified && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-crypto\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Search Crypto Currency\",\n        onChange: ev => setSearchTerm(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [32, 32],\n      className: \"crypto-card-container\",\n      children: cryptos === null || cryptos === void 0 ? void 0 : cryptos.map(currency => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        lg: 6,\n        className: \"crypto-card\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/crypto/${currency.id}`,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: `${currency.rank}. ${currency.name}`,\n            extra: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"crypto-image\",\n              src: currency.iconUrl,\n              alt: currency.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this),\n            hoverable: true,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Price : \", millify(currency.price)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Market Cap : \", millify(currency.marketCap)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Daily Change : \", millify(currency.change), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, currency.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Cryptocurrencies, \"EBh7U/y7rjQLzomRK0gDfL2FXvc=\", false, function () {\n  return [useGetCryptosQuery];\n});\n\n_c = Cryptocurrencies;\nexport default Cryptocurrencies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cryptocurrencies\");","map":{"version":3,"sources":["/Users/achrafbilal/Desktop/resp-test/cryptocurrency/src/components/Cryptocurrencies.jsx"],"names":["React","useState","useEffect","millify","Link","Card","Row","Column","Input","Col","useGetCryptosQuery","Loader","Cryptocurrencies","simplified","count","data","cryptosList","isFetching","cryptos","setCryptos","coins","searchTerm","setSearchTerm","filteredData","filter","coin","name","toLowerCase","includes","ev","target","value","map","currency","id","rank","iconUrl","price","marketCap","change"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Column, Input, Col } from \"antd\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { Loader } from \"./index\";\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState(cryptosList?.data?.coins);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  if (isFetching) return <Loader />;\n  useEffect(() => {\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Crypto Currency\"\n            onChange={(ev) => setSearchTerm(ev.target.value)}\n          />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n            <Link to={`/crypto/${currency.id}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={\n                  <img\n                    className=\"crypto-image\"\n                    src={currency.iconUrl}\n                    alt={currency.name}\n                  />\n                }\n                hoverable\n              >\n                <p> Price : {millify(currency.price)}</p>\n                <p> Market Cap : {millify(currency.marketCap)}</p>\n                <p> Daily Change : {millify(currency.change)}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n"]},"metadata":{},"sourceType":"module"}