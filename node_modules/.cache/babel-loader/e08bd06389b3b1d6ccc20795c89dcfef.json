{"ast":null,"code":"import React from\"react\";import{Line}from\"react-chartjs-2\";import{Col,Row,Typography}from\"antd\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Title=Typography.Title;var LineChart=function LineChart(_ref){var _coinHistory$data2;var coinHistory=_ref.coinHistory,currentPrice=_ref.currentPrice,coinName=_ref.coinName;var coinPrice=[];var coinTimestamp=[];for(var i=0;i<(coinHistory===null||coinHistory===void 0?void 0:(_coinHistory$data=coinHistory.data)===null||_coinHistory$data===void 0?void 0:(_coinHistory$data$his=_coinHistory$data.history)===null||_coinHistory$data$his===void 0?void 0:_coinHistory$data$his.length);i++){var _coinHistory$data,_coinHistory$data$his;coinPrice.push(coinHistory.data.history[i].price);coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());}var data={labels:coinTimestamp,datasets:[{label:\"Price in USD\",data:coinPrice,fill:false,backgroundColor:\"#0071bd\",borderColor:\"#0071bd\"}]};var options={scales:{yAxes:[{ticks:{beginAtZero:true}}]}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Row,{className:\"chart-header\",children:[/*#__PURE__*/_jsxs(Title,{level:2,className:\"chart-title\",children:[coinName,\" Price Chart\"]}),/*#__PURE__*/_jsxs(Col,{className:\"price-container\",children:[/*#__PURE__*/_jsxs(Title,{level:5,className:\"price-change\",children:[coinHistory===null||coinHistory===void 0?void 0:(_coinHistory$data2=coinHistory.data)===null||_coinHistory$data2===void 0?void 0:_coinHistory$data2.change,\"%\"]}),/*#__PURE__*/_jsxs(Title,{level:5,className:\"current-price\",children:[\"Current \",coinName,\" Price: $\",currentPrice]})]})]}),/*#__PURE__*/_jsx(Line,{data:data,options:options})]});};export default LineChart;","map":{"version":3,"sources":["/Users/achrafbilal/Desktop/resp-test/cryptocurrency/src/components/LineChart.jsx"],"names":["React","Line","Col","Row","Typography","Title","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","data","history","length","push","price","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","change"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,iBAArB,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,UAAnB,KAAqC,MAArC,C,6IACA,GAAQC,CAAAA,KAAR,CAAkBD,UAAlB,CAAQC,KAAR,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA6C,2BAA1CC,CAAAA,WAA0C,MAA1CA,WAA0C,CAA7BC,YAA6B,MAA7BA,YAA6B,CAAfC,QAAe,MAAfA,QAAe,CAC7D,GAAMC,CAAAA,SAAS,CAAG,EAAlB,CACA,GAAMC,CAAAA,aAAa,CAAG,EAAtB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAGL,WAAH,SAAGA,WAAH,oCAAGA,WAAW,CAAEM,IAAhB,mEAAG,kBAAmBC,OAAtB,gDAAG,sBAA4BC,MAA/B,CAAjB,CAAwDH,CAAC,EAAzD,CAA6D,6CAC3DF,SAAS,CAACM,IAAV,CAAeT,WAAW,CAACM,IAAZ,CAAiBC,OAAjB,CAAyBF,CAAzB,EAA4BK,KAA3C,EACAN,aAAa,CAACK,IAAd,CACE,GAAIE,CAAAA,IAAJ,CAASX,WAAW,CAACM,IAAZ,CAAiBC,OAAjB,CAAyBF,CAAzB,EAA4BO,SAArC,EAAgDC,kBAAhD,EADF,EAGD,CACD,GAAMP,CAAAA,IAAI,CAAG,CACXQ,MAAM,CAAEV,aADG,CAEXW,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,cADT,CAEEV,IAAI,CAAEH,SAFR,CAGEc,IAAI,CAAE,KAHR,CAIEC,eAAe,CAAE,SAJnB,CAKEC,WAAW,CAAE,SALf,CADQ,CAFC,CAAb,CAYA,GAAMC,CAAAA,OAAO,CAAG,CACdC,MAAM,CAAE,CACNC,KAAK,CAAE,CACL,CACEC,KAAK,CAAE,CACLC,WAAW,CAAE,IADR,CADT,CADK,CADD,CADM,CAAhB,CAWA,mBACE,wCACE,MAAC,GAAD,EAAK,SAAS,CAAC,cAAf,wBACE,MAAC,KAAD,EAAO,KAAK,CAAE,CAAd,CAAiB,SAAS,CAAC,aAA3B,WACGtB,QADH,kBADF,cAIE,MAAC,GAAD,EAAK,SAAS,CAAC,iBAAf,wBACE,MAAC,KAAD,EAAO,KAAK,CAAE,CAAd,CAAiB,SAAS,CAAC,cAA3B,WACGF,WADH,SACGA,WADH,qCACGA,WAAW,CAAEM,IADhB,6CACG,mBAAmBmB,MADtB,OADF,cAIE,MAAC,KAAD,EAAO,KAAK,CAAE,CAAd,CAAiB,SAAS,CAAC,eAA3B,sBACWvB,QADX,aAC8BD,YAD9B,GAJF,GAJF,GADF,cAcE,KAAC,IAAD,EAAM,IAAI,CAAEK,IAAZ,CAAkB,OAAO,CAAEc,OAA3B,EAdF,GADF,CAkBD,CAlDD,CAoDA,cAAerB,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\nconst { Title } = Typography;\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n  for (let i = 0; i < coinHistory?.data?.history?.length; i++) {\n    coinPrice.push(coinHistory.data.history[i].price);\n    coinTimestamp.push(\n      new Date(coinHistory.data.history[i].timestamp).toLocaleDateString()\n    );\n  }\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: \"Price in USD\",\n        data: coinPrice,\n        fill: false,\n        backgroundColor: \"#0071bd\",\n        borderColor: \"#0071bd\",\n      },\n    ],\n  };\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">\n          {coinName} Price Chart\n        </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">\n            {coinHistory?.data?.change}%\n          </Title>\n          <Title level={5} className=\"current-price\">\n            Current {coinName} Price: ${currentPrice}\n          </Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}