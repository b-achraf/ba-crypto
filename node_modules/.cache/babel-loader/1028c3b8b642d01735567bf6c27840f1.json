{"ast":null,"code":"import{createApi,fetchBaseQuery}from'@reduxjs/toolkit/query/react';var cryptoApiHeaders={'x-rapidapi-host':'coinranking1.p.rapidapi.com','x-rapidapi-key':'92b69bf5aemsh0ee9a6c70456fd7p1c1312jsnab663652f92c'};var baseURL='https://coinranking1.p.rapidapi.com';var createRequest=function createRequest(url){return{url:url,headers:cryptoApiHeaders};};export var cryptoApi=createApi({reducerPath:'cryptoApi',baseQuery:fetchBaseQuery({baseUrl:baseURL}),endpoints:function endpoints(builder){return{getCryptos:builder.query({query:function query(count){return createRequest(\"/coins?limit=\".concat(count));}}),getCryptoDetails:builder.query({query:function query(coinId){return createRequest(\"/coin/\".concat(coinId));}}),getCryptoHistory:builder.query({query:function query(_ref){var coinId=_ref.coinId,timePeriod=_ref.timePeriod;return createRequest(\"/coin/\".concat(coinId,\"/history/\").concat(timePeriod));}}),getExchanges:builder.query({query:function query(){return createRequest(\"/exchanges\");}})};}});var useGetCryptosQuery=cryptoApi.useGetCryptosQuery,useGetCryptoDetailsQuery=cryptoApi.useGetCryptoDetailsQuery,useGetCryptoHistoryQuery=cryptoApi.useGetCryptoHistoryQuery,useGetExchangesQuery=cryptoApi.useGetExchangesQuery;export{useGetCryptosQuery,useGetCryptoDetailsQuery,useGetCryptoHistoryQuery,useGetExchangesQuery};","map":{"version":3,"sources":["/Users/achrafbilal/Desktop/resp-test/cryptocurrency/src/services/cryptoApi.js"],"names":["createApi","fetchBaseQuery","cryptoApiHeaders","baseURL","createRequest","url","headers","cryptoApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,cAApB,KAA0C,8BAA1C,CACA,GAAMC,CAAAA,gBAAgB,CAAG,CACrB,kBAAmB,6BADE,CAErB,iBAAkB,oDAFG,CAAzB,CAIA,GAAMC,CAAAA,OAAO,CAAG,qCAAhB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,QAAU,CAAEA,GAAG,CAAHA,GAAF,CAAOC,OAAO,CAAEJ,gBAAhB,CAAV,EAAtB,CACA,MAAO,IAAMK,CAAAA,SAAS,CAAGP,SAAS,CAAC,CAC/BQ,WAAW,CAAE,WADkB,CAE/BC,SAAS,CAAER,cAAc,CAAC,CAAES,OAAO,CAAEP,OAAX,CAAD,CAFM,CAG/BQ,SAAS,CAAE,mBAACC,OAAD,QACP,CACIC,UAAU,CAAED,OAAO,CAACE,KAAR,CAAc,CACtBA,KAAK,CAAE,eAACC,KAAD,QAAWX,CAAAA,aAAa,wBAAiBW,KAAjB,EAAxB,EADe,CAAd,CADhB,CAIIC,gBAAgB,CAAEJ,OAAO,CAACE,KAAR,CAAc,CAC5BA,KAAK,CAAE,eAACG,MAAD,QAAYb,CAAAA,aAAa,iBAAUa,MAAV,EAAzB,EADqB,CAAd,CAJtB,CAOIC,gBAAgB,CAAEN,OAAO,CAACE,KAAR,CAAc,CAC5BA,KAAK,CAAE,wBAAGG,CAAAA,MAAH,MAAGA,MAAH,CAAWE,UAAX,MAAWA,UAAX,OAA4Bf,CAAAA,aAAa,iBAAUa,MAAV,qBAA4BE,UAA5B,EAAzC,EADqB,CAAd,CAPtB,CAUIC,YAAY,CAAER,OAAO,CAACE,KAAR,CAAc,CACxBA,KAAK,CAAE,uBAAMV,CAAAA,aAAa,cAAnB,EADiB,CAAd,CAVlB,CADO,EAHoB,CAAD,CAA3B,CAoBA,GACHiB,CAAAA,kBADG,CAKHd,SALG,CACHc,kBADG,CAEHC,wBAFG,CAKHf,SALG,CAEHe,wBAFG,CAGHC,wBAHG,CAKHhB,SALG,CAGHgB,wBAHG,CAIHC,oBAJG,CAKHjB,SALG,CAIHiB,oBAJG,C","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nconst cryptoApiHeaders = {\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n    'x-rapidapi-key': '92b69bf5aemsh0ee9a6c70456fd7p1c1312jsnab663652f92c'\n}\nconst baseURL = 'https://coinranking1.p.rapidapi.com'\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders })\nexport const cryptoApi = createApi({\n    reducerPath: 'cryptoApi',\n    baseQuery: fetchBaseQuery({ baseUrl: baseURL }),\n    endpoints: (builder) => (\n        {\n            getCryptos: builder.query({\n                query: (count) => createRequest(`/coins?limit=${count}`)\n            }),\n            getCryptoDetails: builder.query({\n                query: (coinId) => createRequest(`/coin/${coinId}`)\n            }),\n            getCryptoHistory: builder.query({\n                query: ({ coinId, timePeriod }) => createRequest(`/coin/${coinId}/history/${timePeriod}`)\n            }),\n            getExchanges: builder.query({\n                query: () => createRequest(`/exchanges`)\n            }),\n        }\n    )\n})\nexport const {\n    useGetCryptosQuery,\n    useGetCryptoDetailsQuery,\n    useGetCryptoHistoryQuery,\n    useGetExchangesQuery\n} = cryptoApi"]},"metadata":{},"sourceType":"module"}