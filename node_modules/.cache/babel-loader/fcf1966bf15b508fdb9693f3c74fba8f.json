{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst cryptoApiHeaders = {\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n  'x-rapidapi-key': '92b69bf5aemsh0ee9a6c70456fd7p1c1312jsnab663652f92c'\n};\nconst baseURL = 'https://coinranking1.p.rapidapi.com';\n\nconst createRequest = url => ({\n  url,\n  headers: cryptoApiHeaders\n});\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: baseURL\n  }),\n  endpoints: builder => ({\n    getCryptos: builder.query({\n      query: count => createRequest(`/coins?limit=${count}`)\n    }),\n    getCryptoDetails: builder.query({\n      query: coinId => createRequest(`/coin/${coinId}`)\n    }),\n    getCryptoHistory: builder.query({\n      query: ({\n        coinId,\n        timePeriod\n      }) => createRequest(`/coin/${coinId}/history/${timePeriod}`)\n    })\n  })\n});\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery\n} = cryptoApi;","map":{"version":3,"sources":["/Users/achrafbilal/Desktop/resp-test/cryptocurrency/src/services/cryptoApi.js"],"names":["createApi","fetchBaseQuery","cryptoApiHeaders","baseURL","createRequest","url","headers","cryptoApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AACA,MAAMC,gBAAgB,GAAG;AACrB,qBAAmB,6BADE;AAErB,oBAAkB;AAFG,CAAzB;AAIA,MAAMC,OAAO,GAAG,qCAAhB;;AAEA,MAAMC,aAAa,GAAIC,GAAD,KAAU;AAAEA,EAAAA,GAAF;AAAOC,EAAAA,OAAO,EAAEJ;AAAhB,CAAV,CAAtB;;AACA,OAAO,MAAMK,SAAS,GAAGP,SAAS,CAAC;AAC/BQ,EAAAA,WAAW,EAAE,WADkB;AAE/BC,EAAAA,SAAS,EAAER,cAAc,CAAC;AAAES,IAAAA,OAAO,EAAEP;AAAX,GAAD,CAFM;AAG/BQ,EAAAA,SAAS,EAAGC,OAAD,KACP;AACIC,IAAAA,UAAU,EAAED,OAAO,CAACE,KAAR,CAAc;AACtBA,MAAAA,KAAK,EAAGC,KAAD,IAAWX,aAAa,CAAE,gBAAeW,KAAM,EAAvB;AADT,KAAd,CADhB;AAIIC,IAAAA,gBAAgB,EAAEJ,OAAO,CAACE,KAAR,CAAc;AAC5BA,MAAAA,KAAK,EAAGG,MAAD,IAAYb,aAAa,CAAE,SAAQa,MAAO,EAAjB;AADJ,KAAd,CAJtB;AAOIC,IAAAA,gBAAgB,EAAEN,OAAO,CAACE,KAAR,CAAc;AAC5BA,MAAAA,KAAK,EAAE,CAAC;AAAEG,QAAAA,MAAF;AAAUE,QAAAA;AAAV,OAAD,KAA4Bf,aAAa,CAAE,SAAQa,MAAO,YAAWE,UAAW,EAAvC;AADpB,KAAd;AAPtB,GADO;AAHoB,CAAD,CAA3B;AAiBP,OAAO,MAAM;AACTC,EAAAA,kBADS;AAETC,EAAAA,wBAFS;AAGTC,EAAAA;AAHS,IAKTf,SALG","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nconst cryptoApiHeaders = {\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n    'x-rapidapi-key': '92b69bf5aemsh0ee9a6c70456fd7p1c1312jsnab663652f92c'\n}\nconst baseURL = 'https://coinranking1.p.rapidapi.com'\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders })\nexport const cryptoApi = createApi({\n    reducerPath: 'cryptoApi',\n    baseQuery: fetchBaseQuery({ baseUrl: baseURL }),\n    endpoints: (builder) => (\n        {\n            getCryptos: builder.query({\n                query: (count) => createRequest(`/coins?limit=${count}`)\n            }),\n            getCryptoDetails: builder.query({\n                query: (coinId) => createRequest(`/coin/${coinId}`)\n            }),\n            getCryptoHistory: builder.query({\n                query: ({ coinId, timePeriod }) => createRequest(`/coin/${coinId}/history/${timePeriod}`)\n            }),\n        }\n    )\n})\nexport const {\n    useGetCryptosQuery,\n    useGetCryptoDetailsQuery,\n    useGetCryptoHistoryQuery,\n    \n} = cryptoApi"]},"metadata":{},"sourceType":"module"}