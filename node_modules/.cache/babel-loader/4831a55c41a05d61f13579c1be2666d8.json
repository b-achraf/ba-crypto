{"ast":null,"code":"var _jsxFileName = \"/Users/achrafbilal/Desktop/resp-test/cryptocurrency/src/components/CryptoDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from \"@ant-design/icons\";\nimport { useGetCryptoDetailsQuery } from \"../services/cryptoApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\n\nconst CryptoDetails = () => {\n  _s();\n\n  var _data$data;\n\n  const {\n    coindId\n  } = useParams();\n  const [timePeriod, seTimePeriod] = useState(\"7d\");\n  const {\n    data,\n    isFetching\n  } = useGetCryptoDetailsQuery(coindId);\n  if (isFetching) return \"Loading...\";\n  const cryptoDetails = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.coin;\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n  const stats = [{\n    title: \"Price to USD\",\n    value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Rank\",\n    value: cryptoDetails.rank,\n    icon: /*#__PURE__*/_jsxDEV(NumberOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 55\n    }, this)\n  }, {\n    title: \"24h Volume\",\n    value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n    icon: /*#__PURE__*/_jsxDEV(ThunderboltOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Market Cap\",\n    value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"All-time-high(daily avg.)\",\n    value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(TrophyOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }];\n  const genericStats = [{\n    title: \"Number Of Markets\",\n    value: cryptoDetails.numberOfMarkets,\n    icon: /*#__PURE__*/_jsxDEV(FundOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Number Of Exchanges\",\n    value: cryptoDetails.numberOfExchanges,\n    icon: /*#__PURE__*/_jsxDEV(MoneyCollectOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Aprroved Supply\",\n    value: cryptoDetails.approvedSupply ? /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(StopOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this),\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Total Supply\",\n    value: `$ ${millify(cryptoDetails.totalSupply)}`,\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Circulating Supply\",\n    value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Col, {\n    className: \"coin-detail-container\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      className: \"coin-heading-container\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 2,\n        className: \"coin-name\",\n        children: [cryptoDetails.name, \"(\", cryptoDetails.slug, \") Price\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CryptoDetails, \"/xLrdxZRsFAJWvcdQWvHD6aa0kw=\", false, function () {\n  return [useParams, useGetCryptoDetailsQuery];\n});\n\n_c = CryptoDetails;\nexport default CryptoDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoDetails\");","map":{"version":3,"sources":["/Users/achrafbilal/Desktop/resp-test/cryptocurrency/src/components/CryptoDetails.jsx"],"names":["React","useState","HTMLReactParser","useParams","millify","Col","Row","Typography","Select","MoneyCollectOutlined","DollarCircleOutlined","FundOutlined","ExclamationCircleOutlined","StopOutlined","TrophyOutlined","CheckOutlined","NumberOutlined","ThunderboltOutlined","useGetCryptoDetailsQuery","Title","Text","Option","CryptoDetails","coindId","timePeriod","seTimePeriod","data","isFetching","cryptoDetails","coin","time","stats","title","value","price","icon","rank","volume","marketCap","allTimeHigh","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","totalSupply","circulatingSupply","name","slug"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\nimport { useGetCryptoDetailsQuery } from \"../services/cryptoApi\";\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coindId } = useParams();\n  const [timePeriod, seTimePeriod] = useState(\"7d\");\n  const { data, isFetching } = useGetCryptoDetailsQuery(coindId);\n  if (isFetching) return \"Loading...\";\n  const cryptoDetails = data?.data?.coin;\n\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All-time-high(daily avg.)\",\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {cryptoDetails.name}({cryptoDetails.slug}) Price\n        </Title>\n        <p></p>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n"]},"metadata":{},"sourceType":"module"}