{"ast":null,"code":"var _jsxFileName = \"/Users/achrafbilal/Desktop/resp-test/cryptocurrency/src/components/CryptoDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport LineChart from \"./LineChart\";\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from \"@ant-design/icons\";\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from \"../services/cryptoApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\n\nconst CryptoDetails = () => {\n  _s();\n\n  var _data$data;\n\n  const {\n    coinId\n  } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const {\n    data,\n    isFetching\n  } = useGetCryptoDetailsQuery(coinId);\n  const {\n    data: coinHistory\n  } = useGetCryptoDetailsQuery({\n    coinId,\n    timePeriod\n  });\n  if (isFetching) return \"Loading...\";\n  const cryptoDetails = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.coin;\n  if (isFetching) return \"Loading...\";\n  console.log(cryptoDetails);\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n  const stats = [{\n    title: \"Price to USD\",\n    value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Rank\",\n    value: cryptoDetails.rank,\n    icon: /*#__PURE__*/_jsxDEV(NumberOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 55\n    }, this)\n  }, {\n    title: \"24h Volume\",\n    value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n    icon: /*#__PURE__*/_jsxDEV(ThunderboltOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Market Cap\",\n    value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"All-time-high(daily avg.)\",\n    value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(TrophyOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }];\n  const genericStats = [{\n    title: \"Number Of Markets\",\n    value: cryptoDetails.numberOfMarkets,\n    icon: /*#__PURE__*/_jsxDEV(FundOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Number Of Exchanges\",\n    value: cryptoDetails.numberOfExchanges,\n    icon: /*#__PURE__*/_jsxDEV(MoneyCollectOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Aprroved Supply\",\n    value: cryptoDetails.approvedSupply ? /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(StopOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this),\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Total Supply\",\n    value: `$ ${millify(cryptoDetails.totalSupply)}`,\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: \"Circulating Supply\",\n    value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Col, {\n    className: \"coin-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      className: \"coin-heading-container\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 2,\n        className: \"coin-name\",\n        children: [cryptoDetails.name, \"(\", cryptoDetails.slug, \") Price\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [cryptoDetails.name, \" live price in US dollars. view value statistics,market cap and supply.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      defaultValue: \"7d\",\n      className: \"select-timeperiod\",\n      placeholder: \"Select Time Period\",\n      onChange: value => setTimePeriod(value),\n      children: time.map(date => /*#__PURE__*/_jsxDEV(Option, {\n        children: date\n      }, date, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      coinHistory: coinHistory,\n      currentPrice: millify(CryptoDetails.price),\n      coinName: cryptoDetails.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      className: \"stats-container\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"coin-value-statistics\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"coin-value-statistics-heading\",\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            level: 3,\n            className: \"coin-details-heading\",\n            children: [cryptoDetails.name, \" Value Statistics\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"An overview showing the stats of \", cryptoDetails.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), stats.map(({\n          icon,\n          title,\n          value\n        }) => /*#__PURE__*/_jsxDEV(Col, {\n          className: \"coin-stats\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"coin-stats-name\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            className: \"stats\",\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"other-stats-info\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"coin-value-statistics-heading\",\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            level: 3,\n            className: \"coin-details-heading\",\n            children: \"Other Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"An overview showing the stats of all cryptocurrencies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), genericStats.map(({\n          icon,\n          title,\n          value\n        }) => /*#__PURE__*/_jsxDEV(Col, {\n          className: \"coin-stats\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"coin-stats-name\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            className: \"stats\",\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"coin-desc-link\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"coin-desc\",\n          children: /*#__PURE__*/_jsxDEV(Title, {\n            level: 3,\n            className: \"coin-details-heading\",\n            children: [\"What is \", cryptoDetails.name, HTMLReactParser(cryptoDetails.description)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"coin-links\",\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            level: 3,\n            className: \"coin-details-heading\",\n            children: [cryptoDetails.name, \" Links\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), cryptoDetails.links.map(link => /*#__PURE__*/_jsxDEV(Row, {\n            className: \"coin-link\",\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              level: 5,\n              className: \"link-name\",\n              children: link.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: link.url,\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              children: link.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)]\n          }, link.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CryptoDetails, \"ozCDWn6kWMwg6u6JAB1G0VYHV/M=\", false, function () {\n  return [useParams, useGetCryptoDetailsQuery, useGetCryptoDetailsQuery];\n});\n\n_c = CryptoDetails;\nexport default CryptoDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoDetails\");","map":{"version":3,"sources":["/Users/achrafbilal/Desktop/resp-test/cryptocurrency/src/components/CryptoDetails.jsx"],"names":["React","useState","HTMLReactParser","useParams","millify","Col","Row","Typography","Select","LineChart","MoneyCollectOutlined","DollarCircleOutlined","FundOutlined","ExclamationCircleOutlined","StopOutlined","TrophyOutlined","CheckOutlined","NumberOutlined","ThunderboltOutlined","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Title","Text","Option","CryptoDetails","coinId","timePeriod","setTimePeriod","data","isFetching","coinHistory","cryptoDetails","coin","console","log","time","stats","title","value","price","icon","rank","volume","marketCap","allTimeHigh","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","totalSupply","circulatingSupply","name","slug","map","date","description","links","link","type","url"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport LineChart from \"./LineChart\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\nimport {\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n} from \"../services/cryptoApi\";\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoDetailsQuery({\n    coinId,\n    timePeriod,\n  });\n  if (isFetching) return \"Loading...\";\n  const cryptoDetails = data?.data?.coin;\n  if (isFetching) return \"Loading...\";\n  console.log(cryptoDetails);\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All-time-high(daily avg.)\",\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {cryptoDetails.name}({cryptoDetails.slug}) Price\n        </Title>\n        <p>\n          {cryptoDetails.name} live price in US dollars. view value\n          statistics,market cap and supply.\n        </p>\n      </Col>\n      <Select\n        defaultValue=\"7d\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Time Period\"\n        onChange={(value) => setTimePeriod(value)}\n      >\n        {time.map((date) => (\n          <Option key={date}>{date}</Option>\n        ))}\n      </Select>\n      <LineChart\n        coinHistory={coinHistory}\n        currentPrice={millify(CryptoDetails.price)}\n        coinName={cryptoDetails.name}\n      />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails.name} Value Statistics\n            </Title>\n            <p>An overview showing the stats of {cryptoDetails.name}</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              Other Statistics\n            </Title>\n            <p>An overview showing the stats of all cryptocurrencies</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"coin-desc-link\">\n          <Row className=\"coin-desc\">\n            <Title level={3} className=\"coin-details-heading\">\n              What is {cryptoDetails.name}\n              {HTMLReactParser(cryptoDetails.description)}\n            </Title>\n          </Row>\n          <Col className=\"coin-links\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails.name} Links\n            </Title>\n            {cryptoDetails.links.map((link) => (\n              <Row className=\"coin-link\" key={link.name}>\n                <Title level={5} className=\"link-name\">\n                  {link.type}\n                </Title>\n                <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                  {link.name}\n                </a>\n              </Row>\n            ))}\n          </Col>\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n"]},"metadata":{},"sourceType":"module"}