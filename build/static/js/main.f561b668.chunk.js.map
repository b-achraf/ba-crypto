{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","components/LineChart.jsx","services/cryptoApi.js","components/CryptoDetails.jsx","components/Cryptocurrencies.jsx","components/Exchanges.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Homepage.jsx","components/Loader.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Typography","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","data","history","length","push","price","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","change","options","scales","yAxes","ticks","beginAtZero","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Text","Option","Select","CryptoDetails","useParams","setTimePeriod","isFetching","cryptoDetails","coin","console","log","stats","title","value","millify","DollarCircleOutlined","rank","NumberOutlined","volume","ThunderboltOutlined","marketCap","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","name","slug","defaultValue","placeholder","onChange","map","date","index","HTMLReactParser","description","links","link","type","href","target","rel","Cryptocurrencies","simplified","cryptosList","coins","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","toLowerCase","includes","ev","gutter","currency","xs","sm","lg","id","extra","iconUrl","alt","hoverable","Panel","Collapse","Exchanges","exchangesList","exchanges","span","exchange","showArrow","header","marketShare","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImageUrl","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","toToLowerCase","indexOf","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","Homepage","globalStats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Loader","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"wSAAe,MAA0B,2C,OC2D1BA,EAhDA,WACb,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,MAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAYA,OAXAC,qBAAU,WACR,IAAMC,EAAe,kBAAMF,EAAcG,OAAOC,aAGhD,OAFAD,OAAOE,iBAAiB,SAAUH,GAClCA,IACO,kBAAMC,OAAOG,oBAAoB,SAAUJ,MACjD,IACHD,qBAAU,WAENH,IADEC,EAAa,QAGhB,CAACA,IAEF,sBAAKQ,UAAU,gBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,IAAD,CAAQC,IAAKC,EAAMC,KAAK,UACxB,cAAC,IAAWC,MAAZ,CAAkBC,MAAO,EAAGL,UAAU,OAAtC,SACE,cAAC,IAAD,CAAMM,GAAG,IAAT,yBAEF,cAAC,IAAD,CACEN,UAAU,yBACVO,QAAS,kBAAMhB,GAAeD,IAFhC,SAIE,cAACkB,EAAA,EAAD,SAGHlB,GACC,eAAC,IAAD,CAAMmB,MAAM,OAAZ,UACE,cAAC,IAAKC,KAAN,CAAWR,KAAM,cAACS,EAAA,EAAD,IAAjB,SACE,cAAC,IAAD,CAAML,GAAG,IAAT,mBADqC,KAGvC,cAAC,IAAKI,KAAN,CAAWR,KAAM,cAACU,EAAA,EAAD,IAAjB,SACE,cAAC,IAAD,CAAMN,GAAG,mBAAT,+BADqC,KAGvC,cAAC,IAAKI,KAAN,CAAWR,KAAM,cAACW,EAAA,EAAD,IAAjB,SACE,cAAC,IAAD,CAAMP,GAAG,aAAT,wBAD6C,KAG/C,cAAC,IAAKI,KAAN,CAAWR,KAAM,cAACY,EAAA,EAAD,IAAjB,SACE,cAAC,IAAD,CAAMR,GAAG,QAAT,mBADqC,Y,4DC/CzCF,EAAUW,IAAVX,MAqDOY,EApDG,SAAC,GAGjB,IAH8D,IAAD,EAA1CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SACxCC,EAAY,GACZC,EAAgB,GACbC,EAAI,EAAGA,GAAC,OAAGL,QAAH,IAAGA,GAAH,UAAGA,EAAaM,YAAhB,iBAAG,EAAmBC,eAAtB,aAAG,EAA4BC,QAAQH,IAAK,CAAC,IAAD,IAC3DF,EAAUM,KAAKT,EAAYM,KAAKC,QAAQF,GAAGK,OAC3CN,EAAcK,KACZ,IAAIE,KAAKX,EAAYM,KAAKC,QAAQF,GAAGO,WAAWC,sBAGpD,IAAMP,EAAO,CACXQ,OAAQV,EACRW,SAAU,CACR,CACEC,MAAO,eACPV,KAAMH,EACNc,MAAM,EACNC,gBAAiB,UACjBC,YAAa,aAenB,OACE,qCACE,eAAC,IAAD,CAAKpC,UAAU,eAAf,UACE,eAACI,EAAD,CAAOC,MAAO,EAAGL,UAAU,cAA3B,UACGmB,EADH,kBAGA,eAAC,IAAD,CAAKnB,UAAU,kBAAf,UACE,eAACI,EAAD,CAAOC,MAAO,EAAGL,UAAU,eAA3B,iBACGiB,QADH,IACGA,GADH,UACGA,EAAaM,YADhB,aACG,EAAmBc,OADtB,OAGA,eAACjC,EAAD,CAAOC,MAAO,EAAGL,UAAU,gBAA3B,qBACWmB,EADX,YAC8BD,WAIlC,cAAC,IAAD,CAAMK,KAAMA,EAAMe,QA1BN,CACdC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,a,gFC7BnBC,EAAmB,CACrB,kBAAmB,8BACnB,iBAAkB,sDAIhBC,EAAgB,SAACC,GAAD,MAAU,CAAEA,MAAKC,QAASH,IACnCI,EAAYC,YAAU,CAC/BC,YAAa,YACbC,UAAWC,YAAe,CAAEC,QALhB,wCAMZC,UAAW,SAACC,GAAD,MACP,CACIC,WAAYD,EAAQE,MAAM,CACtBA,MAAO,SAACC,GAAD,OAAWb,EAAc,gBAAD,OAAiBa,OAEpDC,iBAAkBJ,EAAQE,MAAM,CAC5BA,MAAO,SAACG,GAAD,OAAYf,EAAc,SAAD,OAAUe,OAE9CC,iBAAkBN,EAAQE,MAAM,CAC5BA,MAAO,gBAAGG,EAAH,EAAGA,OAAQE,EAAX,EAAWA,WAAX,OAA4BjB,EAAc,SAAD,OAAUe,EAAV,oBAA4BE,OAEhFC,aAAcR,EAAQE,MAAM,CACxBA,MAAO,kBAAMZ,EAAc,qBAMvCmB,EAIAhB,EAJAgB,mBACAC,EAGAjB,EAHAiB,yBACAC,EAEAlB,EAFAkB,yBACAC,EACAnB,EADAmB,qBCVI9D,EAAgBW,IAAhBX,MAAO+D,EAASpD,IAAToD,KACPC,EAAWC,IAAXD,OAmKOE,EAjKO,WAAO,IAAD,EAClBX,EAAWY,cAAXZ,OACR,EAAoCtE,mBAAS,MAA7C,mBAAOwE,EAAP,KAAmBW,EAAnB,KACQjD,EAASyC,EAAyBL,GAAlCpC,KACR,EAA0C0C,EAAyB,CACjEN,SACAE,eAFY5C,EAAd,EAAQM,KAAmBkD,EAA3B,EAA2BA,WAIrBC,EAAa,OAAGnD,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYoD,KAGlC,GAFAC,QAAQC,IAAIH,IAEPnD,IAASN,GAAewD,EAAY,OAAO,cAAC,GAAD,IAChD,IAEMK,EAAQ,CACZ,CACEC,MAAO,eACPC,MAAM,KAAD,QAAoB,OAAbN,QAAa,IAAbA,OAAA,EAAAA,EAAe/C,QAASsD,IAAO,OAACP,QAAD,IAACA,OAAD,EAACA,EAAe/C,QAC3DzB,KAAM,cAACgF,EAAA,EAAD,KAER,CAAEH,MAAO,OAAQC,MAAK,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAeS,KAAMjF,KAAM,cAACkF,EAAA,EAAD,KACnD,CACEL,MAAO,aACPC,MAAM,KAAD,QAAoB,OAAbN,QAAa,IAAbA,OAAA,EAAAA,EAAeW,SAAUJ,IAAO,OAACP,QAAD,IAACA,OAAD,EAACA,EAAeW,SAC5DnF,KAAM,cAACoF,EAAA,EAAD,KAER,CACEP,MAAO,aACPC,MAAM,KAAD,QACU,OAAbN,QAAa,IAAbA,OAAA,EAAAA,EAAea,YAAaN,IAAO,OAACP,QAAD,IAACA,OAAD,EAACA,EAAea,YAErDrF,KAAM,cAACgF,EAAA,EAAD,KAER,CACEH,MAAO,4BACPC,MAAM,KAAD,OAAOC,IAAO,OAACP,QAAD,IAACA,OAAD,EAACA,EAAec,YAAY7D,QAC/CzB,KAAM,cAACuF,EAAA,EAAD,MAIJC,EAAe,CACnB,CACEX,MAAO,oBACPC,MAAK,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAeiB,gBACtBzF,KAAM,cAACU,EAAA,EAAD,KAER,CACEmE,MAAO,sBACPC,MAAK,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAekB,kBACtB1F,KAAM,cAACW,EAAA,EAAD,KAER,CACEkE,MAAO,kBACPC,OAAoB,OAAbN,QAAa,IAAbA,OAAA,EAAAA,EAAemB,gBACpB,cAACC,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,IAEF7F,KAAM,cAAC8F,EAAA,EAAD,KAER,CACEjB,MAAO,eACPC,MAAM,KAAD,OAAOC,IAAO,OAACP,QAAD,IAACA,OAAD,EAACA,EAAeuB,cACnC/F,KAAM,cAAC8F,EAAA,EAAD,KAER,CACEjB,MAAO,qBACPC,MAAM,KAAD,OAAOC,IAAO,OAACP,QAAD,IAACA,OAAD,EAACA,EAAewB,oBACnChG,KAAM,cAAC8F,EAAA,EAAD,MAIV,OACE,eAAC,IAAD,CAAKhG,UAAU,wBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,yBAAf,UACE,eAAC,EAAD,CAAOK,MAAO,EAAGL,UAAU,YAA3B,iBACG0E,QADH,IACGA,OADH,EACGA,EAAeyB,KADlB,WACyBzB,QADzB,IACyBA,OADzB,EACyBA,EAAe0B,KADxC,aAGA,qCACG1B,QADH,IACGA,OADH,EACGA,EAAeyB,KADlB,gFAKF,cAAC,IAAD,CACEE,aAAa,KACbrG,UAAU,oBACVsG,YAAY,qBACZC,SAAU,SAACvB,GAAD,OAAWR,EAAcQ,IAJrC,SAvES,CAAC,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,KAAM,MA6E9CwB,KAAI,SAACC,GAAD,OACR,cAACrC,EAAD,UAAoBqC,GAAPA,QAGjB,cAAC,EAAD,CACExF,YAAaA,EACbC,aAAc+D,IAAQP,EAAc/C,OACpCR,SAAQ,OAAEuD,QAAF,IAAEA,OAAF,EAAEA,EAAeyB,OAE3B,eAAC,IAAD,CAAKnG,UAAU,kBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,wBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,gCAAf,UACE,eAAC,EAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,iBACG0E,QADH,IACGA,OADH,EACGA,EAAeyB,KADlB,uBAGA,yEAAqCzB,QAArC,IAAqCA,OAArC,EAAqCA,EAAeyB,WAErDrB,EAAM0B,KAAI,WAAyBE,GAAzB,IAAGxG,EAAH,EAAGA,KAAM6E,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,MAAhB,OACT,eAAC,IAAD,CAAiBhF,UAAU,aAA3B,UACE,eAAC,IAAD,CAAKA,UAAU,kBAAf,UACE,cAACmE,EAAD,UAAOjE,IACP,cAACiE,EAAD,UAAOY,OAET,cAACZ,EAAD,CAAMnE,UAAU,QAAhB,SAAyBgF,MALjB0B,SASd,eAAC,IAAD,CAAK1G,UAAU,mBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,gCAAf,UACE,cAAC,EAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,8BAGA,yFAED0F,EAAac,KAAI,WAAyBE,GAAzB,IAAGxG,EAAH,EAAGA,KAAM6E,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,MAAhB,OAChB,eAAC,IAAD,CAAiBhF,UAAU,aAA3B,UACE,eAAC,IAAD,CAAKA,UAAU,kBAAf,UACE,cAACmE,EAAD,UAAOjE,IACP,cAACiE,EAAD,UAAOY,OAET,cAACZ,EAAD,CAAMnE,UAAU,QAAhB,SAAyBgF,MALjB0B,YAST,IACP,eAAC,IAAD,CAAK1G,UAAU,iBAAf,UACE,cAAC,IAAD,CAAKA,UAAU,YAAf,SACE,eAAC,EAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,4BACW0E,QADX,IACWA,OADX,EACWA,EAAeyB,KACvBQ,YAAe,OAACjC,QAAD,IAACA,OAAD,EAACA,EAAekC,kBAGpC,eAAC,IAAD,CAAK5G,UAAU,aAAf,UACE,eAAC,EAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,iBACG0E,QADH,IACGA,OADH,EACGA,EAAeyB,KADlB,YADF,OAIGzB,QAJH,IAIGA,OAJH,EAIGA,EAAemC,MAAML,KAAI,SAACM,GAAD,OACxB,eAAC,IAAD,CAAK9G,UAAU,YAAf,UACE,cAAC,EAAD,CAAOK,MAAO,EAAGL,UAAU,YAA3B,SACG8G,EAAKC,OAER,mBAAGC,KAAMF,EAAKjE,IAAKoE,OAAO,SAASC,IAAI,aAAvC,SACGJ,EAAKX,SALsBW,EAAKX,mB,mBCpHlCgB,GAjDU,SAAC,GAAoB,IAAD,EAAjBC,EAAiB,EAAjBA,WAE1B,EAA0CrD,EAD5BqD,EAAa,GAAK,KAClBC,EAAd,EAAQ9F,KAAmBkD,EAA3B,EAA2BA,WAC3B,EAA8BpF,mBAAQ,OAACgI,QAAD,IAACA,GAAD,UAACA,EAAa9F,YAAd,aAAC,EAAmB+F,OAA1D,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCnI,mBAAS,IAA7C,mBAAOoI,EAAP,KAAmBC,EAAnB,KAOA,OANAhI,qBAAU,WAAO,IAAD,EACRiI,EAAY,OAAGN,QAAH,IAAGA,GAAH,UAAGA,EAAa9F,YAAhB,aAAG,EAAmB+F,MAAMM,QAAO,SAACjD,GAAD,OACnDA,EAAKwB,KAAK0B,cAAcC,SAASL,EAAWI,kBAE9CL,EAAWG,KACV,CAACN,EAAaI,KACZJ,GAAe5C,EAAmB,cAAC,GAAD,IAErC,sCACI2C,GACA,qBAAKpH,UAAU,gBAAf,SACE,cAAC,IAAD,CACEsG,YAAY,yBACZC,SAAU,SAACwB,GAAD,OAAQL,EAAcK,EAAGd,OAAOjC,YAIhD,cAAC,IAAD,CAAKgD,OAAQ,CAAC,GAAI,IAAKhI,UAAU,wBAAjC,gBACGuH,QADH,IACGA,OADH,EACGA,EAASf,KAAI,SAACyB,GAAD,OACZ,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGpI,UAAU,cAAtC,SACE,cAAC,IAAD,CAAMM,GAAE,kBAAa2H,EAASI,IAA9B,SACE,eAAC,KAAD,CACEtD,MAAK,UAAKkD,EAAS9C,KAAd,aAAuB8C,EAAS9B,MACrCmC,MACE,qBACEtI,UAAU,eACVC,IAAKgI,EAASM,QACdC,IAAKP,EAAS9B,OAGlBsC,WAAS,EATX,UAWE,0CAAaxD,IAAQgD,EAAStG,UAC9B,+CAAkBsD,IAAQgD,EAAS1C,cACnC,iDAAoBN,IAAQgD,EAAS5F,QAArC,aAfmD4F,EAASI,a,UCtBpElE,GAASpD,IAAToD,KACAuE,GAAUC,KAAVD,MAqDOE,GAnDG,WAAO,IAAD,EACtB,EAA6B1E,IAArB3C,EAAR,EAAQA,KAAMkD,EAAd,EAAcA,WACRoE,EAAa,OAAGtH,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYuH,UAElC,OAAKvH,GAAQkD,EAAmB,cAAC,GAAD,IAG9B,qCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKsE,KAAM,EAAX,uBACA,cAAC,IAAD,CAAKA,KAAM,EAAX,8BACA,cAAC,IAAD,CAAKA,KAAM,EAAX,qBACA,cAAC,IAAD,CAAKA,KAAM,EAAX,uBAEF,cAAC,IAAD,UACGF,EAAcrC,KAAI,SAACwC,GAAD,OACjB,cAAC,IAAD,CAAKD,KAAM,GAAX,SACE,cAAC,KAAD,UACE,cAACL,GAAD,CAEEO,WAAW,EACXC,OACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKH,KAAM,EAAX,UACE,cAAC,GAAD,UACE,mCAASC,EAAS7D,KAAlB,SAEF,cAAC,IAAD,CACEnF,UAAU,iBACVC,IAAK+I,EAAST,UAEhB,cAAC,GAAD,UACE,iCAASS,EAAS7C,YAGtB,eAAC,IAAD,CAAK4C,KAAM,EAAX,cAAgB9D,IAAQ+D,EAAS3D,WACjC,cAAC,IAAD,CAAK0D,KAAM,EAAX,SAAe9D,IAAQ+D,EAASrD,mBAChC,eAAC,IAAD,CAAKoD,KAAM,EAAX,UAAe9D,IAAQ+D,EAASG,aAAhC,SAfQH,EAASX,IAJvB,SAuBG1B,YAAgBqC,EAASpC,aAAe,KAtBpCoC,EAASX,iB,qBC7BxBe,GAAoB,CACtB,iBAAkB,OAClB,kBAAmB,mCACnB,iBAAkB,sDAKTC,GAAgBrG,YACzB,CACIC,YAAa,gBACbC,UAAWC,YACP,CACIC,QARA,6CAWRC,UAAW,SAACC,GAAD,MACP,CACIgG,cAAehG,EAAQE,MACnB,CACIA,MAAO,gBAEC+F,EAFD,EAECA,aACA9F,EAHD,EAGCA,MAHD,MAbC,CAAEZ,IAkBS,kBAAD,OACI0G,EADJ,8DACsE9F,GAnBzEX,QAASsG,WA4B5CI,GACAH,GADAG,sBC7BIrF,GAAgBpD,IAAhBoD,KAAM/D,GAAUW,IAAVX,MACNgE,GAAWC,IAAXD,OACFqF,GACJ,kEA6EaC,GA5EF,SAAC,GAAoB,IAAD,IAAjBtC,EAAiB,EAAjBA,WACd,EAAwC/H,mBAAS,kBAAjD,mBAAOkK,EAAP,KAAqBI,EAArB,KACQpI,EAASwC,EAAmB,KAA5BxC,KACR,EAAyCiI,GAAsB,CAC7DD,eACA9F,MAAO2D,EAAa,EAAI,KAFZwC,EAAd,EAAQrI,KAAkBkD,EAA1B,EAA0BA,WAK1B,OAAKlD,GAASqI,IAAcnF,EAE1B,eAAC,IAAD,CAAKuD,OAAQ,CAAC,GAAI,IAAlB,WACIZ,GACA,cAAC,IAAD,CAAK2B,KAAM,GAAX,SACE,eAAC,IAAD,CACEc,YAAU,EACV7J,UAAU,cACVsG,YAAY,kBACZwD,iBAAiB,WACjBvD,SAAU,SAACvB,GAAD,OAAW2E,EAAgB3E,IACrC+E,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SAASC,gBAAgBC,QAAQJ,EAAMnC,gBAAkB,GAPpE,UAUE,cAAC,GAAD,CAAQ7C,MAAM,iBAAd,4BAVF,OAWGzD,QAXH,IAWGA,GAXH,UAWGA,EAAMA,YAXT,iBAWG,EAAY+F,aAXf,aAWG,EAAmBd,KAAI,SAAC7B,EAAMrD,GAAP,OACtB,cAAC,GAAD,CAAQ0D,MAAOL,EAAKwB,KAApB,SACGxB,EAAKwB,MADuBxB,EAAK0D,YAf9C,OAsBGuB,QAtBH,IAsBGA,OAtBH,EAsBGA,EAAY5E,MAAMwB,KAAI,SAAC6D,EAAM/I,GAAP,uBACrB,cAAC,IAAD,CAAK4G,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAzB,SACE,cAAC,KAAD,CAAMK,WAAS,EAACzI,UAAU,YAA1B,SACE,oBAAGgH,KAAMqD,EAAKxH,IAAKoE,OAAO,SAASC,IAAI,aAAvC,UACE,sBAAKlH,UAAU,uBAAf,UACE,cAAC,GAAD,CAAOA,UAAU,YAAYK,MAAO,EAApC,SACGgK,EAAKlE,OAER,qBACEmE,MAAO,CAAEC,SAAU,QAASC,UAAW,SACvCvK,KAAS,OAAJoK,QAAI,IAAJA,GAAA,UAAAA,EAAMI,aAAN,mBAAaC,iBAAb,eAAwBC,aAAclB,GAC3CjB,IAAI,YAGR,4BACG6B,EAAKzD,YAAc,IAAnB,UACMyD,EAAKzD,YAAYgE,UAAU,EAAG,KADpC,OAEGP,EAAKzD,cAEX,sBAAK5G,UAAU,qBAAf,UACE,gCACE,cAAC,IAAD,CACEC,KACE,UAAAoK,EAAKQ,SAAS,UAAd,mBAAkBJ,aAAlB,mBAAyBC,iBAAzB,eAAoCC,aACpClB,GAEFjB,IAAI,SAEN,cAAC,GAAD,CAAMxI,UAAU,gBAAhB,mBACGqK,EAAKQ,SAAS,UADjB,aACG,EAAkB1E,UAGvB,cAAC,GAAD,UACG2E,KAAOT,EAAKU,eAAeC,QAAQ,MAAMC,qBAhCnB3J,SAzBQ,cAAC,GAAD,K,UCbzClB,GAAUW,IAAVX,MAgEO8K,GA/DE,WAAO,IAAD,EACrB,EAA6BnH,EAAmB,IAAxCxC,EAAR,EAAQA,KAAMkD,EAAd,EAAcA,WACR0G,EAAW,OAAG5J,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYuD,MAChC,OAAKvD,GAAQkD,EAAmB,cAAC,GAAD,IAE9B,qCACE,cAAC,GAAD,CAAOpE,MAAO,EAAGL,UAAU,UAA3B,iCAGA,eAAC,IAAD,WACE,cAAC,IAAD,CAAK+I,KAAM,GAAX,SACE,cAAC,KAAD,CACEhE,MAAM,yBACNC,MAAOC,IAAQkG,EAAYC,WAG/B,cAAC,IAAD,CAAKrC,KAAM,GAAX,SACE,cAAC,KAAD,CACEhE,MAAM,kBACNC,MAAOC,IAAQkG,EAAYE,oBAG/B,cAAC,IAAD,CAAKtC,KAAM,GAAX,SACE,cAAC,KAAD,CACEhE,MAAM,mBACNC,MAAOC,IAAQkG,EAAYG,oBAG/B,cAAC,IAAD,CAAKvC,KAAM,GAAX,SACE,cAAC,KAAD,CACEhE,MAAM,mBACNC,MAAOC,IAAQkG,EAAYI,oBAG/B,cAAC,IAAD,CAAKxC,KAAM,GAAX,SACE,cAAC,KAAD,CACEhE,MAAM,gBACNC,MAAOC,IAAQkG,EAAYK,qBAIjC,sBAAKxL,UAAU,yBAAf,UACE,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,aAA3B,kDAGA,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,YAA3B,SACE,cAAC,IAAD,CAAMM,GAAG,oBAAT,4BAGJ,cAAC,GAAD,CAAkB8G,YAAU,IAC5B,sBAAKpH,UAAU,yBAAf,UACE,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,aAA3B,gCAGA,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,YAA3B,SACE,cAAC,IAAD,CAAMM,GAAG,QAAT,4BAGJ,cAAC,GAAD,CAAM8G,YAAU,Q,UCxDPqE,GANA,kBACb,qBAAKzL,UAAU,SAAf,SACE,cAAC,KAAD,OCgDW0L,I,OAhDH,WACR,OACI,sBAAK1L,UAAU,MAAf,UACI,qBAAKA,UAAU,SAAf,SACI,cAAC,EAAD,MAEJ,sBAAKA,UAAU,OAAf,UACI,cAAC,IAAD,UACI,qBAAKA,UAAU,SAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO2L,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,oBAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,kBAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SACI,cAAC,GAAD,aAKhB,sBAAK5L,UAAU,SAAf,UACI,eAAC,IAAWI,MAAZ,CAAkBC,MAAO,EAAGiK,MAAO,CAC/BuB,MAAO,QACPC,UAAW,UAFf,sBAIa,uBAJb,yBAOA,eAAC,IAAD,WACI,cAAC,IAAD,CAAMxL,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,aAAT,uBACA,cAAC,IAAD,CAAMA,GAAG,QAAT,gC,oCCzCTyL,gBAAe,CAC1BC,SAAO,oBACFjJ,EAAUE,YAAcF,EAAUiJ,SADhC,eAEF3C,GAAcpG,YAAcoG,GAAc2C,SAFxC,KCGXC,IAASC,OACL,cAAC,IAAD,UACI,cAAC,KAAD,CAAUC,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGNC,SAASC,eAAe,W","file":"static/js/main.f561b668.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from \"react\";\nimport { Button, Menu, Typography, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\nimport icon from \"../images/cryptocurrency.png\";\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(null);\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  useEffect(() => {\n    if (screenSize < 1000) {\n      setActiveMenu(false);\n    } else setActiveMenu(true);\n  }, [screenSize]);\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\">\n          <Link to=\"/\">BA-Crypto</Link>\n        </Typography.Title>\n        <Button\n          className=\"menu-control-container\"\n          onClick={() => setActiveMenu(!activeMenu)}\n        >\n          <MenuOutlined />\n        </Button>\n      </div>\n      {activeMenu && (\n        <Menu theme=\"dark\">\n          <Menu.Item icon={<HomeOutlined />} key=\"1\">\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item icon={<FundOutlined />} key=\"2\">\n            <Link to=\"cryptocurrencies\">Cryptocurrencies</Link>\n          </Menu.Item>\n          <Menu.Item icon={<MoneyCollectOutlined />} key=\"3\">\n            <Link to=\"/exchanges\">Exchanges</Link>\n          </Menu.Item>\n          <Menu.Item icon={<BulbOutlined />} key=\"'\">\n            <Link to=\"/news\">News</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\nconst { Title } = Typography;\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n  for (let i = 0; i < coinHistory?.data?.history?.length; i++) {\n    coinPrice.push(coinHistory.data.history[i].price);\n    coinTimestamp.push(\n      new Date(coinHistory.data.history[i].timestamp).toLocaleDateString()\n    );\n  }\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: \"Price in USD\",\n        data: coinPrice,\n        fill: false,\n        backgroundColor: \"#0071bd\",\n        borderColor: \"#0071bd\",\n      },\n    ],\n  };\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">\n          {coinName} Price Chart\n        </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">\n            {coinHistory?.data?.change}%\n          </Title>\n          <Title level={5} className=\"current-price\">\n            Current {coinName} Price: ${currentPrice}\n          </Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nconst cryptoApiHeaders = {\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n    'x-rapidapi-key': '92b69bf5aemsh0ee9a6c70456fd7p1c1312jsnab663652f92c'\n}\nconst baseURL = 'https://coinranking1.p.rapidapi.com'\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders })\nexport const cryptoApi = createApi({\n    reducerPath: 'cryptoApi',\n    baseQuery: fetchBaseQuery({ baseUrl: baseURL }),\n    endpoints: (builder) => (\n        {\n            getCryptos: builder.query({\n                query: (count) => createRequest(`/coins?limit=${count}`)\n            }),\n            getCryptoDetails: builder.query({\n                query: (coinId) => createRequest(`/coin/${coinId}`)\n            }),\n            getCryptoHistory: builder.query({\n                query: ({ coinId, timePeriod }) => createRequest(`/coin/${coinId}/history/${timePeriod}`)\n            }),\n            getExchanges: builder.query({\n                query: () => createRequest(`/exchanges`)\n            }),\n        }\n    )\n})\nexport const {\n    useGetCryptosQuery,\n    useGetCryptoDetailsQuery,\n    useGetCryptoHistoryQuery,\n    useGetExchangesQuery\n} = cryptoApi","import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport LineChart from \"./LineChart\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\nimport {\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n} from \"../services/cryptoApi\";\nimport { Loader } from \"./index\";\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const { data } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory, isFetching } = useGetCryptoHistoryQuery({\n    coinId,\n    timePeriod,\n  });\n  const cryptoDetails = data?.data?.coin;\n  console.log(cryptoDetails);\n\n  if (!data || !coinHistory || isFetching) return <Loader />;\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails?.price && millify(cryptoDetails?.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails?.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails?.volume && millify(cryptoDetails?.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${\n        cryptoDetails?.marketCap && millify(cryptoDetails?.marketCap)\n      }`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All-time-high(daily avg.)\",\n      value: `$ ${millify(cryptoDetails?.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails?.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails?.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails?.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${millify(cryptoDetails?.totalSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${millify(cryptoDetails?.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {cryptoDetails?.name}({cryptoDetails?.slug}) Price\n        </Title>\n        <p>\n          {cryptoDetails?.name} live price in US dollars. view value\n          statistics,market cap and supply.\n        </p>\n      </Col>\n      <Select\n        defaultValue=\"7d\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Time Period\"\n        onChange={(value) => setTimePeriod(value)}\n      >\n        {time.map((date) => (\n          <Option key={date}>{date}</Option>\n        ))}\n      </Select>\n      <LineChart\n        coinHistory={coinHistory}\n        currentPrice={millify(cryptoDetails.price)}\n        coinName={cryptoDetails?.name}\n      />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails?.name} Value Statistics\n            </Title>\n            <p>An overview showing the stats of {cryptoDetails?.name}</p>\n          </Col>\n          {stats.map(({ icon, title, value }, index) => (\n            <Col key={index} className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              Other Statistics\n            </Title>\n            <p>An overview showing the stats of all cryptocurrencies</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }, index) => (\n            <Col key={index} className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>{\" \"}\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">\n            What is {cryptoDetails?.name}\n            {HTMLReactParser(cryptoDetails?.description)}\n          </Title>\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">\n            {cryptoDetails?.name} Links\n          </Title>\n          {cryptoDetails?.links.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">\n                {link.type}\n              </Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                {link.name}\n              </a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import React, { useState, useEffect } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Column, Input, Col } from \"antd\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { Loader } from \"./index\";\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState(cryptosList?.data?.coins);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n  if (!cryptosList || isFetching) return <Loader />;\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Crypto Currency\"\n            onChange={(ev) => setSearchTerm(ev.target.value)}\n          />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n            <Link to={`/crypto/${currency.id}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={\n                  <img\n                    className=\"crypto-image\"\n                    src={currency.iconUrl}\n                    alt={currency.name}\n                  />\n                }\n                hoverable\n              >\n                <p> Price : {millify(currency.price)}</p>\n                <p> Market Cap : {millify(currency.marketCap)}</p>\n                <p> Daily Change : {millify(currency.change)}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\nimport HTMLReactParser from \"html-react-parser\";\n\nimport { useGetExchangesQuery } from \"../services/cryptoApi\";\nimport { Loader } from \"./index\";\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery();\n  const exchangesList = data?.data?.exchanges;\n\n  if (!data || isFetching) return <Loader />;\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={\n                  <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text>\n                        <strong>{exchange.rank}.</strong>\n                      </Text>\n                      <Avatar\n                        className=\"exchange-image\"\n                        src={exchange.iconUrl}\n                      />\n                      <Text>\n                        <strong>{exchange.name}</strong>\n                      </Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                }\n              >\n                {HTMLReactParser(exchange.description || \"\")}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nconst cryptoNewsHeaders = {\n    'x-bingapis-sdk': 'true',\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\n    'x-rapidapi-key': '92b69bf5aemsh0ee9a6c70456fd7p1c1312jsnab663652f92c'\n}\nconst baseURL = 'https://bing-news-search1.p.rapidapi.com'\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders })\nexport const cryptoNewsApi = createApi(\n    {\n        reducerPath: 'cryptoNewsApi',\n        baseQuery: fetchBaseQuery(\n            {\n                baseUrl: baseURL\n            }\n        ),\n        endpoints: (builder) => (\n            {\n                getCryptoNews: builder.query(\n                    {\n                        query: (\n                            {\n                                newsCategory,\n                                count\n                            }\n                        ) => createRequest(\n                            `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\n                        )\n                    }\n                )\n            }\n        )\n    }\n)\nexport const {\n    useGetCryptoNewsQuery,\n} = cryptoNewsApi","import React, { useState } from \"react\";\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\nimport moment from \"moment\";\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { Loader } from \"./index\";\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\nconst demoImageUrl =\n  \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\n  const { data } = useGetCryptosQuery(100);\n  const { data: cryptoNews, isFetching } = useGetCryptoNewsQuery({\n    newsCategory,\n    count: simplified ? 6 : 10,\n  });\n\n  if (!data || !cryptoNews || isFetching) return <Loader />;\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) =>\n              option.children.toToLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\n            {data?.data?.coins?.map((coin, i) => (\n              <Option value={coin.name} key={coin.id}>\n                {coin.name}\n              </Option>\n            ))}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews?.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"new-title\" level={4}>\n                  {news.name}\n                </Title>\n                <img\n                  style={{ maxWidth: \"200px\", maxHeight: \"200px\" }}\n                  src={news?.image?.thumbnail?.contentUrl || demoImageUrl}\n                  alt=\"news\"\n                />\n              </div>\n              <p>\n                {news.description > 100\n                  ? `${news.description.substring(0, 100)}...`\n                  : news.description}\n              </p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar\n                    src={\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\n                      demoImageUrl\n                    }\n                    alt=\"news\"\n                  />\n                  <Text className=\"provider-name\">\n                    {news.provider[0]?.name}\n                  </Text>\n                </div>\n                <Text>\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\n                </Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Typography, Row, Col, Statistic } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { Cryptocurrencies, News, Loader } from \"./index\";\nconst { Title } = Typography;\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n  if (!data || isFetching) return <Loader />;\n  return (\n    <>\n      <Title level={2} className=\"heading\">\n        Crypto Global Stats\n      </Title>\n      <Row>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Cryptocurrencies\"\n            value={millify(globalStats.total)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Exchanges\"\n            value={millify(globalStats.totalExchanges)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Market Cap\"\n            value={millify(globalStats.totalMarketCap)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total 24h Volume\"\n            value={millify(globalStats.total24hVolume)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Markets\"\n            value={millify(globalStats.totalMarkets)}\n          />\n        </Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Top 10 Cryptocurrencies in the world\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/cryptocurrencies\">Show More</Link>\n        </Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Latest Crypto News\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/news\">Show More</Link>\n        </Title>\n      </div>\n      <News simplified />\n    </>\n  );\n};\n\nexport default Homepage;\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;\n","import React from 'react'\nimport { Switch, Route, Link } from 'react-router-dom'\nimport { Layout, Typography, Space } from 'antd'\nimport { Navbar, Homepage, Exchanges, Cryptocurrencies, CryptoDetails, News } from './components/index'\nimport './App.css'\nconst App = () => {\n    return (\n        <div className=\"app\">\n            <div className=\"navbar\">\n                <Navbar />\n            </div>\n            <div className=\"main\">\n                <Layout>\n                    <div className=\"routes\">\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <Homepage />\n                            </Route>\n                            <Route exact path=\"/exchanges\">\n                                <Exchanges />\n                            </Route>\n                            <Route exact path=\"/cryptocurrencies\">\n                                <Cryptocurrencies />\n                            </Route>\n                            <Route exact path=\"/crypto/:coinId\">\n                                <CryptoDetails />\n                            </Route>\n                            <Route exact path=\"/news\">\n                                <News />\n                            </Route>\n                        </Switch>\n                    </div>\n                </Layout>\n                <div className=\"footer\" >\n                    <Typography.Title level={5} style={{\n                        color: 'white',\n                        textAlign: 'center'\n                    }}>\n                        BA-Crypto<br />\n                        All rights reserved\n                    </Typography.Title>\n                    <Space>\n                        <Link to='/'>Home</Link>\n                        <Link to='/exchanges'>Exchanges</Link>\n                        <Link to='/news'>News</Link>\n                    </Space>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default App\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { cryptoApi } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\nexport default configureStore({\n    reducer: {\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer\n    }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport \"antd/dist/antd.css\"\nimport store from './app/store'\nReactDOM.render(\n    <Router>\n        <Provider store={store} >\n            <App />\n        </Provider>\n    </Router>\n    , document.getElementById('root'));"],"sourceRoot":""}